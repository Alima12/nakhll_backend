# Generated by Django 3.2.14 on 2022-08-20 08:25

from django.db import migrations
import pgtrigger
import pgtrigger.migrations


class Migration(migrations.Migration):

    dependencies = [
        ('bank', '0029_accountrequest_check_request_types_requirements'),
    ]

    operations = [
        pgtrigger.migrations.AddTrigger(
            model_name='account',
            trigger=pgtrigger.Protect(condition=None, declare=None, func=None, level=pgtrigger.Level(name='ROW'), name='protect_from_deletes', operation=pgtrigger.Operation(name='DELETE'), referencing=None, timing=None, when=pgtrigger.When(name='BEFORE')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='accountrequest',
            trigger=pgtrigger.Protect(condition=None, declare=None, func=None, level=pgtrigger.Level(name='ROW'), name='protect_from_deletes', operation=pgtrigger.Operation(name='DELETE'), referencing=None, timing=None, when=pgtrigger.When(name='BEFORE')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='accountrequest',
            trigger=pgtrigger.Protect(condition=pgtrigger.Q(('old__status__in', (1, 2))), declare=None, func=None, level=pgtrigger.Level(name='ROW'), name='protect_confirmed_or_rejected_from_updates', operation=pgtrigger.Operation(name='UPDATE'), referencing=None, timing=None, when=pgtrigger.When(name='BEFORE')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='accountrequest',
            trigger=pgtrigger.Protect(condition=None, declare=None, func=None, level=pgtrigger.Level(name='ROW'), name='create_official_interface', operation=pgtrigger.Operation(name='INSERT'), referencing=None, timing=None, when=pgtrigger.When(name='BEFORE')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='accountrequest',
            trigger=pgtrigger.Protect(condition=None, declare=None, func=None, level=pgtrigger.Level(name='ROW'), name='confirm_reject_official_interface', operation=pgtrigger.Operation(name='UPDATE'), referencing=None, timing=None, when=pgtrigger.When(name='BEFORE')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='accounttransaction',
            trigger=pgtrigger.Protect(condition=None, declare=None, func=None, level=pgtrigger.Level(name='ROW'), name='protect_from_updates_and_deleted', operation=pgtrigger.Operations(pgtrigger.Operation(name='UPDATE'), pgtrigger.Operation(name='DELETE')), referencing=None, timing=None, when=pgtrigger.When(name='BEFORE')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='coinmintburn',
            trigger=pgtrigger.Protect(condition=None, declare=None, func=None, level=pgtrigger.Level(name='ROW'), name='protect_from_deletes_and_updates', operation=pgtrigger.Operations(pgtrigger.Operation(name='DELETE'), pgtrigger.Operation(name='UPDATE')), referencing=None, timing=None, when=pgtrigger.When(name='BEFORE')),
        ),
    ]
