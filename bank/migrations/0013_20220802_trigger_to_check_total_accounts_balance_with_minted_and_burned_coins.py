# Generated by Django 3.2.14 on 2022-08-02 07:31

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('bank', '0012_20220802_trigger_to_prevent_burn_coin_more_than_minted_coins'), ]

    operations = [
        migrations.RunSQL('''
            -- FUNCTION: public.bank_total_accounts_coins()

            -- DROP FUNCTION IF EXISTS public.bank_total_accounts_coins();

            CREATE OR REPLACE FUNCTION public.bank_total_accounts_coins(
                )
                RETURNS bigint
                LANGUAGE 'sql'
                COST 100
                VOLATILE PARALLEL UNSAFE
            AS $BODY$
            select sum(balance) from bank_account
            $BODY$;

            ALTER FUNCTION public.bank_total_accounts_coins()
                OWNER TO nakhll;
        ''', reverse_sql='DROP FUNCTION IF EXISTS public.bank_total_accounts_coins();'),
        migrations.RunSQL('''
            -- FUNCTION: public.check_accounts_balance_with_minted_and_burned_coins()

            -- DROP FUNCTION IF EXISTS public.check_accounts_balance_with_minted_and_burned_coins();

            CREATE OR REPLACE FUNCTION public.check_accounts_balance_with_minted_and_burned_coins()
                RETURNS trigger
                LANGUAGE 'plpgsql'
                COST 100
                VOLATILE NOT LEAKPROOF
            AS $BODY$
            declare
                minted_not_burned_coins integer;
                total_accounts_coins integer;
            begin
                minted_not_burned_coins := bank_total_minted_not_burned_coins();
                total_accounts_coins := bank_total_accounts_coins();
                if minted_not_burned_coins <> total_accounts_coins then
                    raise exception 'total balance is not compatible with minted and burned coins';
                end if;
                return new;
            end;
            $BODY$;

            ALTER FUNCTION public.check_accounts_balance_with_minted_and_burned_coins()
                OWNER TO nakhll;
        ''', reverse_sql='DROP FUNCTION IF EXISTS public.check_accounts_balance_with_minted_and_burned_coins();'),
        migrations.RunSQL('''
            -- Trigger: check_accounts_balance_on_insert_or_update

            -- DROP TRIGGER IF EXISTS check_accounts_balance_on_insert_or_update ON public.bank_account;

            CREATE CONSTRAINT TRIGGER check_accounts_balance_on_insert_or_update
                AFTER INSERT OR UPDATE
                ON public.bank_account
                DEFERRABLE INITIALLY DEFERRED
                FOR EACH ROW
                EXECUTE FUNCTION public.check_accounts_balance_with_minted_and_burned_coins();\
        ''', reverse_sql='DROP TRIGGER IF EXISTS check_accounts_balance_on_insert_or_update ON public.bank_account;'),
    ]
