# Generated by Django 3.2.14 on 2022-08-04 06:41

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('bank',
         '0013_20220802_trigger_to_check_total_accounts_balance_with_minted_and_burned_coins'),
    ]

    operations = [
        migrations.RunSQL('''
            -- FUNCTION: public.check_account_balance_with_transactions()

            -- DROP FUNCTION IF EXISTS public.check_account_balance_with_transactions();

            CREATE OR REPLACE FUNCTION public.check_account_balance_with_transactions()
                RETURNS trigger
                LANGUAGE 'plpgsql'
                COST 100
                VOLATILE NOT LEAKPROOF
            AS $BODY$
            declare
                account_balance integer;
                transactions_balance integer;
            begin
                account_balance := (
                    select value
                    from bank_accounttransaction
                    where account_id = new.id
                );
                transactions_balance := (
                    select sum(value)
                    from bank_accounttransaction
                    );
                if account_balance <> transactions_balance then
                    raise exception 'account balance must be equal to transactions.';
                end if;
                return new;
            end;
            $BODY$;

            ALTER FUNCTION public.check_account_balance_with_transactions()
                OWNER TO nakhll;
        ''', reverse_sql='DROP FUNCTION IF EXISTS public.check_account_balance_with_transactions();'),
        migrations.RunSQL('''
            -- Trigger: check_account_balance_with_transactions_insert_update_delete

            -- DROP TRIGGER IF EXISTS check_account_balance_with_transactions_insert_update_delete ON public.bank_accounttransaction;

            CREATE CONSTRAINT TRIGGER check_account_balance_with_transactions_insert_update_delete
                AFTER INSERT OR DELETE OR UPDATE
                ON public.bank_accounttransaction
                DEFERRABLE INITIALLY DEFERRED
                FOR EACH ROW
                EXECUTE FUNCTION public.check_account_balance_with_transactions();
        ''', reverse_sql='DROP TRIGGER IF EXISTS check_account_balance_with_transactions_insert_update_delete ON public.bank_accounttransaction;')
    ]
